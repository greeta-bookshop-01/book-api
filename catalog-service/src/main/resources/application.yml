server:
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: catalog
  lifecycle:
    timeout-per-shutdown-phase: 15s

  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
  keycloak:
    server-url: http://localhost:8080
    server-external-url: http://localhost:8080
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-external-url}/realms/book-realm
          jwk-set-uri: ${spring.keycloak.server-url}/realms/book-realm/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG

info:
  system: Book Service

jwt:
  auth:
    converter:
      resource-id: book-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: ${spring.keycloak.server-external-url}
    realm: book-realm